# Default values for adira-one.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

replicaCount: 1

image:
  # repository: >-
  #   asia-southeast2-docker.pkg.dev/it-infrastructure-service
  #   adira-ent-registry-registry-vpc.ap-southeast-5.cr.aliyuncs.com
  repository: >-
    asia-southeast2-docker.pkg.dev/it-infrastructure-service

  # environment: [dev|uat|production]
  environment: uat

  # service: cats-idm-app
  service: "be-domain-order"

  # pullPolicy: [IfNotPresent|Always|Never]
  pullPolicy: IfNotPresent

  # tag: <semantic-version>-<date>-<build-number>
  tag: ""

imagePullSecrets:
  - name: regcred

service:
  annotations: {}
  type: ClusterIP
  port: 1512
  # targetPort: <int> # optional

ingress:
  enabled: false
  className: "nginx"
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: example.adira.co.id
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: ssl-adira
  #    hosts:
  #      - example.adira.co.id

resources:
  limits:
    cpu: 500m
    memory: 1024Mi
  requests:
    cpu: 100m
    memory: 300Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000710000
  # capabilities:
  #   drop:
  #   - ALL

route:
  enabled: true
  className: ""
  annotations: {}
  host: maple-order-uat.adira.co.id
  path: /
  wildcardPolicy: None

nodeSelector:
  {}
  # kubernetes.io/hostname: node-hostname

probes:
  {}
  # livenessProbe:
  #   tcpSocket:
  #     port: http
  # readinessProbe:
  #   tcpSocket:
  #     port: http
  # livenessProbe:
  #   httpGet:
  #     path: /
  #     port: http
  # readinessProbe:
  #   httpGet:
  #     path: /
  #     port: http

volumes:
  []
  # - name: <volume-name>
  #   mountPath: /path/to/persist
  #   subPath: /path/to/persist # optional
  #   type:
  #     persistentVolumeClaim:
  #       claimName: <pvc-name>

configMap:
  {}
  # FIRST_ENV_NAME: VALUE_OF_FIRST_ENV
  # SECOND_ENV_NAME: VALUE_OF_SECOND_ENV

env:
  {}
  # FIRST_ENV_NAME: VALUE_OF_FIRST_ENV
  # SECOND_ENV_NAME: VALUE_OF_SECOND_ENV

envFrom:
  []
  # - secretRef:
  #     name: <secret-name>
  # - configMapRef:
  #     name: <config-map-name>

hostAliases:
  []
  # - ip: 10.10.10.10
  #   hostnames:
  #     - dns.adira.co.id

cronJob:
  enabled: false
  schedule: "* * * * *"
  concurrencyPolicy: Allow
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  restartPolicy: Never

tolerations:
  []
  # - key: "key1"
  #   operator: "Equal"
  #   value: "value1"
  #   effect: "NoSchedule"
  # - key: "key1"
  #   operator: "Exists"
  #   effect: "NoSchedule"

affinity:
  {}
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #       - matchExpressions:
  #           - key: node-role.kubernetes.io/worker
  #             operator: In
  #             values:
  #               - worker
  #               - slaves
  #   preferredDuringSchedulingIgnoredDuringExecution:
  #     - weight: 1
  #       preference:
  #         matchExpressions:
  #           - key: beta.kubernetes.io/os
  #             operator: In
  #             values:
  #               - linux
